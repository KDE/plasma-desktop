<?xml version="1.0" ?>
<!DOCTYPE article PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN"
"dtd/kdedbx45.dtd" [
<!ENTITY % addindex "IGNORE">
<!ENTITY % English "INCLUDE" > <!-- change language only here -->
]>

<article id="kcmaccess" lang="&language;">
<title>Accessibility</title>
<articleinfo>
<authorgroup>	
<author>&Mike.McBride; &Mike.McBride.mail;</author>
<!-- TRANS:ROLES_OF_TRANSLATORS -->
</authorgroup>

<date>2021-04-08</date>
<releaseinfo>Plasma 5.20</releaseinfo>

<keywordset>
<keyword>KDE</keyword>
<keyword>Systemsettings</keyword>
<keyword>accessibility</keyword>
<keyword>keys</keyword>
<keyword>bell</keyword>
</keywordset>
</articleinfo>

<sect1 id="accessibility">
<title>Accessibility</title>
<sect2 id="accessibility-intro">

<title>Introduction</title>

<para>
This module is designed to help users who have difficulty hearing
audible cues, or who have difficulty using a keyboard.
</para>

<para>
    The module is divided into six pages:
    <link linkend="access-bell"><guilabel>Sytem Bell</guilabel></link>,
    <link linkend="access-modifier-keys"><guilabel>Modifier Keys</guilabel></link>,
    <link linkend="access-keyboard-filters"><guilabel>Keyboard Filters</guilabel></link>,
    <link linkend="access-activation-shortcuts"><guilabel>Activation Shortcuts</guilabel></link>,
    <link linkend="mouse-navigation"><guilabel>Mouse Navigation</guilabel></link>, and
    <link linkend="access-screenreader"><guilabel>Screen Reader</guilabel></link>.
</para>

<sect3 id="access-bell">
<title><guilabel>System Bell</guilabel></title>

<para>
    The system bell consists of a way to notify you that a certain event
    has occurred or that you have pressed specific keys. This notification
    can be done with sound using the <guilabel>Audible bell</guilabel>
    (for users with visual impairments) or with a visual cue using the
    <guilabel>Visual bell</guilabel> (for users with hearing impairments).
</para>

<para>
    The events or key presses that trigger the system bell can be found
    under the <link linkend="access-modifier-keys"><guilabel>Modifier Keys</guilabel></link>,
    <link linkend="access-keyboard-filters"><guilabel>Keyboard Filters</guilabel></link>,
    and <link linkend="access-activation-shortcuts"><guilabel>Activation Shortcuts</guilabel></link> pages.
</para>

<para>
    The top check box labeled <guilabel>Audible bell: Enable</guilabel>
    determines whether the computer will beep or ring a sound when a certain
    event happens or key is pressed. Examples of this are enabling activation
    shortcuts, or pressing Ctrl or Caps Lock.
</para>

<para>
    If you want to use a different sound for the system bell, enable the
    <guilabel>Custom sound:</guilabel> check box, and enter the complete
    pathname to the sound file in the text box next to the check box.
    If you want, you can select the <guiicon>button next to it containing a folder
    icon</guiicon> to navigate through your filesystem to find the exact file.
</para>

<para>
    For those users who have difficulty hearing the audible bell, or those
    users who have a silent computer, &kde; offers the <emphasis>visual bell</emphasis>.
    This provides a visual signal (inverting the screen or flashing a color
    across it) instead of ringing a sound. This visual signal lasts for half
    a second by default, and it is deliberately intrusive to call attention
    to itself and ensure you notice it.
</para>

<para>
    To use the visual bell, enable the check box labeled
    <guilabel>Visual bell: Enabled</guilabel>. You can then choose between
    <guibutton>Invert screen colors</guibutton> or <guibutton>Flash screen</guibutton>
    for the visual bell.
</para>

<para>
    If you select <guilabel>Invert screen colors</guilabel>, all colors on
    the screen will be reversed. If you choose <guilabel>Flash screen</guilabel>,
    you can click the button to the right of the <guilabel>Flash screen</guilabel>
    check box, which opens a color picker that lets you choose a custom color.
    The default color is red.
</para>

<para>
    You can adjust the duration of the visual bell by changing the value of the
    <guilabel>Duration</guilabel> spin box.
    The default value is 500 msec, or half a second.
</para>

</sect3>

<sect3 id="access-modifier-keys">
<title><guilabel>Modifier Keys</guilabel></title>

<para>
    Modifier keys are special keys on your keyboard that modify the behavior of
    the next key that is pressed. For example, pressing Ctrl + v will paste the
    contents of your clipboard on a text editor instead of simply typing the
    letter v. The most common modifier keys are:
</para>

<itemizedlist>
    <listitem><para>Ctrl</para></listitem>
    <listitem><para>Shift</para></listitem>
    <listitem><para>Alt</para></listitem>
    <listitem><para>Meta (also known as Super or Windows key)</para></listitem>
</itemizedlist>

<variablelist>
<varlistentry>
<term><guilabel>Sticky Keys:</guilabel></term>
<listitem>
    <para>
        Typically, to trigger a keyboard shortcut like
        <keycombo action="simul">&Ctrl;&Alt;&Del;</keycombo>, you would:
    </para>
    <itemizedlist>
        <listitem><para>Press and hold &Ctrl;</para></listitem>
        <listitem><para>Press and hold &Alt; while holding &Ctrl;</para></listitem>
        <listitem><para>Press and release T while holding &Ctrl; and &Alt;</para></listitem>
        <listitem><para>Release &Ctrl; and &Alt;</para></listitem>
    </itemizedlist>
    <para>
        In other words, all the modifier keys would need to be held down while performing
        the shortcut. This can cause strain in the hands, especially if you suffer from
        any motor skill issues.
    </para>
    <para>
        If Sticky Keys is enabled, modifier keys will behave as though they <quote>stick</quote>
        in place, that is, they no longer need to be held down, and you will only need to do the
        following in order to trigger the shortcut:
    </para>
    <itemizedlist>
        <listitem><para>Press and release &Ctrl;</para></listitem>
        <listitem><para>Press and release &Alt;</para></listitem>
        <listitem><para>Press and release T</para></listitem>
    </itemizedlist>

    <para>
        If the next check box, <guilabel>Lock sticky keys</guilabel>, is enabled, modifier keys
        stay <quote>selected</quote> until you <quote>de-select</quote> them. As an example:
    </para>

    <variablelist>
        <varlistentry>
            <term>With <guilabel>Lock Sticky Keys</guilabel> disabled:</term>
            <listitem>
                <para>If you press the &Shift; key then press the
                    <keycap>F</keycap> key, the computer interprets this as <keycombo
                        action="simul">&Shift;<keycap>F</keycap></keycombo>.  Now if you
                    type a <keycap>P</keycap>, the computer interprets this as the letter p
                    (no shift).
                </para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term>With <guilabel>Lock Sticky Keys</guilabel> enabled:</term>
            <listitem>
                <para>
                    If you press the &Shift; key <emphasis>twice</emphasis> then press the <keycap>F</keycap> key,
                    the computer interprets this as <keycombo
                        action="simul">&Shift;<keycap>F</keycap></keycombo>.  Now if you
                    type a <keycap>P</keycap>, the computer interprets this as the letter P
                    (<keycombo action="simul">&Shift;<keycap>P</keycap></keycombo>). To
                    de-select the &Shift; key, press it again.
                </para>
            </listitem>
        </varlistentry>
    </variablelist>

    <para>
        If the check box <guilabel>Disable when two keys are held down</guilabel> is enabled,
        pressing and holding two keys, for example Shift P, will cancel or <quote>deselect</quote>
        the modifier keys that have been previously locked.
    </para>
    <para>
        If the check box <guilabel>Ring system bell when modifier keys are used</guilabel> is enabled,
        every time a modifier key is pressed, the system bell will ring. At least one of the bell
        options provided in the <link linkend="access-bell">System Bell</link> page should
        be enabled for this option to work.
    </para>

    <para>
        The following two options are feedback options, and they don't need sticky keys to be active.
    </para>

    <para>
        If the check box <guilabel>Ring system bell when locking keys are used</guilabel> is enabled,
        every time a locking key is pressed, the system bell will ring. At least one of the bell
        options provided in the <link linkend="access-bell">System Bell</link> page should
        be enabled for this option to work. The locking keys are Caps Lock, Num Lock, and Scroll Lock.
    </para>

    <para>
        If the check box <guilabel>Show notification when modifier or locking keys are used</guilabel> is enabled,
        a visual Plasma notification will show up for five seconds when any of the mentioned keys are pressed
        with a message like <quote>The Shift key is now active</quote>.
    </para>

    <para>
        Click the <guibutton>Configure Notifications...</guibutton> button to open a dialog
        that allows you to edit the notifications for all accessibility features, including
        whether the notification should make a sound or show a popup.
    </para>

</listitem>
</varlistentry>
</variablelist>

</sect3>

<sect3 id="access-keyboard-filters">
<title><guilabel>Keyboard Filters</guilabel></title>

<para>There are two sections to this panel.</para>

<variablelist>
<varlistentry>
<term><guilabel>Use slow keys</guilabel></term>
<listitem>
<para>
If this option is enabled, you must hold the key down for a
specified length of time (adjustable with the spin box) before the
keystroke will be accepted. This helps prevent accidental key strokes.
</para>
</listitem>
</varlistentry>
<!-- Acceptance delay slider 500 ms default
Use system bell whenever a key is pressed/accepted/rejected
-->
<varlistentry>
<term><guilabel>Use bounce keys</guilabel></term>
<listitem>
<para>
If this option is enabled, you must wait for a specified length of time
(configurable with the spin box) before the next key press can be
accepted. This prevents accidental multiple key strokes.
</para>
</listitem>
</varlistentry>
<!-- Debounce time slider 500 ms default
Use system bell whenever a key is rejected
-->

</variablelist>

</sect3>

<sect3 id="access-activation-shortcuts">
<title><guilabel>Activation Gestures</guilabel></title>

<para>There are two sections to this panel.</para>

<variablelist>
<varlistentry>
<term><guilabel>Activation Gestures</guilabel> with these options:</term>
<listitem>
<para>
<simplelist>
<member><guilabel>Use gestures for activating sticky keys and slow keys</guilabel></member>
<member>Here you can activate keyboard gestures that turn on the following features:</member>
<member>Mouse Keys: Press &Shift;+NumLock</member>
<member>Sticky keys: Press &Shift; key 5 consecutive times</member>
<member>Slow keys: Hold down &Shift; for 8 seconds</member>
<member><guilabel>Turn sticky keys and slow keys off after a certain period of inactivity</guilabel></member>
</simplelist>
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Notification</guilabel> with these options:</term>
<listitem>
<para>
<simplelist>
<member><guilabel>Use the system bell whenever a gesture is used to turn an accessibility 
feature on or off</guilabel></member>

<member><guilabel>Show a confirmation dialog whenever a keyboard accessibility feature is 
turned on or off</guilabel></member>
<member>If this option is checked, &kde; will show a confirmation dialog whenever a 
keyboard accessibility feature is turned on or off.</member>
<member>Ensure you know what you are doing if you uncheck it, as the keyboard 
accessibility settings will then always be applied without confirmation.</member>

<member><guilabel>Use &kde;'s system notification mechanism whenever a keyboard accessibility 
feature is turned on or off</guilabel></member>
</simplelist>
</para>
</listitem>
</varlistentry>
</variablelist>
<para>Click the <guibutton>Configure Notifications</guibutton> button to open a dialog 
which allows you to edit the notifications for status changes of all keys.</para>

</sect3>

<sect3 id="mouse-navigation">
<title>Mouse Navigation</title>

<para>
This tab allows you to configure the keyboard number pad keys as a mouse-type device. This may be useful when you are working on a device without another pointing device, or where you have no other use for the number pad.
</para>

<variablelist>

<varlistentry>
<term><guilabel>Move pointer with keyboard (using the num pad)</guilabel></term>
<listitem>
<para>
To enable keyboard mouse mode, you need to select the check box labeled <guilabel>Move pointer with keyboard (using the num pad)</guilabel>. When you do this, the other settings will become enabled, and you can customize the keyboard pointer behavior further, if required.
</para>
<para>
The various keys on the number pad move in the direction you would expect. Note that you can move diagonally as well as up, down, left and right.  The <keycap>5</keycap> key emulates a click to a pointer button, typically &LMB;. You change which button is emulated by using the <keycap>/</keycap> key (which makes it &LMB;), <keycap>*</keycap> key (which makes it &MMB;) and <keycap>-</keycap> (which makes it &RMB;). Using the <keycap>+</keycap> emulates a double click to the selected pointer button. You can use the <keycap>0</keycap> key to emulate holding down the selected pointer button (for easy dragging), and then use the <keycap>.</keycap> to emulate releasing the selected pointer button.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Acceleration delay</guilabel></term>
<listitem>
<para>
This is the time (in milliseconds) between the initial key press and the first repeated motion event for mouse key acceleration.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Repeat interval</guilabel></term>
<listitem>
<para>
This is the time in milliseconds between repeated motion events for mouse key acceleration.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Acceleration time</guilabel></term>
<listitem>
<para>
This is the time in milliseconds before the pointer reaches a maximum speed for mouse key acceleration.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Maximum speed</guilabel></term>
<listitem>
<para>
This is the maximum speed in pixels per second the pointer can reach for mouse key acceleration.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Pointer acceleration</guilabel></term>
<listitem>
<para>
This is the amount of acceleration to apply to mouse key acceleration.
</para>
</listitem>
</varlistentry>

</variablelist>

</sect3>

<sect3 id="access-screenreader">
<title><guilabel>Screen Reader</guilabel></title>

<para>Install a screen reader application like
<ulink url="https://en.wikipedia.org/wiki/Orca_(assistive_technology)">Orca</ulink>
together with <application>speech-dispatcher</application>.
</para>

<para>Test that sound from speech dispatcher works using the command
<command>spd-say hello</command> in a terminal.
</para>

<para>In addition you need a text to speech synthesizer like &eg; <application>espeak</application>.
</para>

<para>Enable the screen reader in the checkbox, logout and restart your desktop session.
</para>

<para>For &plasma; itself, make sure to use the traditional <guilabel>Application Menu</guilabel>,
and check that this menu has a keyboard shortcut associated
(<keycombo action="simul">&Alt;<keycap>F1</keycap></keycombo>).
When pressing this shortcut, the menu should open and be read when navigating
the menu with the arrow keys.
</para>
</sect3>

</sect2>

</sect1>

</article>
